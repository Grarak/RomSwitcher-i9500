#!/sbin/busybox sh

CPUFREQS=""

while read FREQ TIME; do
	if [ $FREQ -lt 751000 ]; then
		LABEL=$(expr $FREQ \* 2)
		LABEL=$(expr $LABEL / 1000)
		CPUFREQS="$CPUFREQS $FREQ:\"${LABEL}MHz\", "
	else
		LABEL=$(expr $FREQ / 1000)
		CPUFREQS="$CPUFREQS $FREQ:\"${LABEL}MHz\", "
	fi
done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state

MIFFREQS='800000:"800MHz", 400000:"400MHz", 200000:"200MHz"'
INTFREQS='400000:"400MHz", 267000:"267MHz", 200000:"200MHz", 160000:"160MHz", 100000:"100MHz", 50000:"50MHz"'


cat << CTAG
{
    name:QoS,
    elements:[
        { SDescription:{
		description:"QoS, Quality of Service mechanisms provide minimal operating performance points to guarantee optimal service operation."
        }},
	
	{ SPane:{
		title:"Touchscreen",
		description:"Controls the way the touchscreen booster reacts to touches. The screen touch booster has 3 different scales, depending on what the stock framework feeds the touch driver at a given moment." 
        }},


	{ SPane:{
		title:"Nominal booster",
		description:"The nominal booster scales the CPU, MIF, INT to the below given frequencies, waits for given charge time and then turns off."
	}},
	{ SSeekBar:{
       		title:"CPU boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_1",
		values:{
`
			echo $CPUFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Internal boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_int_freq_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_int_freq_1",
		values:{
`
			echo $INTFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_1",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Off time",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_charge_time_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_charge_time_1",
		min:0, max:1000, step:20, unit:"ms"
	}},






	{ SPane:{
		title:"Medium booster",
		description:"The medium booster acts like the nominal booster, but instead of the off-time acts as a charge-time to the next state with a custom MIF level. It has an independent off-time."
	}},
	{ SSeekBar:{
       		title:"Memory boost frequency 2",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_2`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_2",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Off time",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_off_time_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_off_time_1",
		min:0, max:1000, step:20, unit:"ms"
	}},







	{ SPane:{
		title:"High booster",
		description:"The high booster scales the CPU, MIF, INT to the below given high frequencies, waits for given charge time and then switches to another CPU frequency, it waits its off-time and then turns off."
	}},
	{ SSeekBar:{
       		title:"CPU boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_9_0`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_9_0",
		values:{
`
			echo $CPUFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Internal boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_int_freq_9`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_int_freq_9",
		values:{
`
			echo $INTFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory boost frequency",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_9`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_mif_freq_9",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Charge time",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_charge_time_9`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_charge_time_9",
		min:0, max:1000, step:20, unit:"ms"
	}},
	{ SSeekBar:{
       		title:"CPU boost frequency 2",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_9_1`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_cpu_freq_9_1",
		values:{
`
			echo $CPUFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Off time",
		default:`cat /sys/module/synaptics_i2c_rmi/parameters/qos_off_time_9`,
		action:"generic /sys/module/synaptics_i2c_rmi/parameters/qos_off_time_9",
		min:0, max:2000, step:20, unit:"ms"
	}},






	{ SPane:{
		title:"Touchkeys",
		description:"Controls the way the touchkey boosters reacts to presses." 
        }},
	{ SSeekBar:{
       		title:"CPU boost frequency",
		default:`cat /sys/module/cypress_touchkey/parameters/qos_cpu_freq`,
		action:"generic /sys/module/cypress_touchkey/parameters/qos_cpu_freq",
		values:{
`
			echo $CPUFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory boost press frequency",
		description:"The initial frequency the booster demands on press.",
		default:`cat /sys/module/cypress_touchkey/parameters/qos_mif_freq`,
		action:"generic /sys/module/cypress_touchkey/parameters/qos_mif_freq",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory boost hold frequency",
		description:"After 200ms, the booster changes the QoS to this level.",
		default:`cat /sys/module/cypress_touchkey/parameters/qos_mif_freq`,
		action:"generic /sys/module/cypress_touchkey/parameters/qos_mif_freq",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Internal boost frequency",
		default:`cat /sys/module/cypress_touchkey/parameters/qos_int_freq`,
		action:"generic /sys/module/cypress_touchkey/parameters/qos_int_freq",
		values:{
`
			echo $INTFREQS
`
			, 0:"Disabled"
		}
	}},


	
	{ SPane:{
		title:"GPU",
		description:"Controls the way the GPU driver requests system QoS. The GPU driver does these requests when out of its idle state." 
        }},
	{ SSeekBar:{
       		title:"CPU min frequency",
		default:`cat /sys/module/pvrsrvkm/parameters/qos_cpu_freq`,
		action:"generic /sys/module/pvrsrvkm/parameters/qos_cpu_freq",
		values:{
`
			echo $CPUFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Internal min frequency",
		default:`cat /sys/module/pvrsrvkm/parameters/qos_int_freq`,
		action:"generic /sys/module/pvrsrvkm/parameters/qos_int_freq",
		values:{
`
			echo $INTFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory min frequency on low load",
		default:`cat /sys/module/pvrsrvkm/parameters/qos_mif_freq`,
		action:"generic /sys/module/pvrsrvkm/parameters/qos_mif_freq",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory min frequency on high load",
		default:`cat /sys/module/pvrsrvkm/parameters/qos_mif2_freq`,
		action:"generic /sys/module/pvrsrvkm/parameters/qos_mif2_freq",
		values:{
`
			echo $MIFFREQS
`
			, 0:"Disabled"
		}
	}},
	{ SSeekBar:{
       		title:"Memory high load GPU frequency threshold",
		description:"The GPU frequency threshold on which the QoS system passes from low load to high load memory frequencies.",
		default:`cat /sys/module/pvrsrvkm/parameters/qos_mif2_threshold`,
                unit:"MHz",
		action:"generic /sys/module/pvrsrvkm/parameters/qos_mif2_threshold",
		values:[
`
			while read FREQ; do
			  [[ ! -z $FREQ ]] && echo "$FREQ, "
			done < /sys/devices/platform/pvrsrvkm.0/sgx_dvfs_table
`
		]
	}}
    ]
}
CTAG
